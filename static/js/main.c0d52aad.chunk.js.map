{"version":3,"sources":["components/CountdownHeader/CountdownHeader.js","components/CountdownBody/CountdownBody.js","components/CountdownFooter/CountdownFooter.js","App.js","index.js"],"names":["CountdownHeader","props","handleChange","event","setState","minutes","target","value","time","handleStart","a","preventDefault","handleCountdown","state","set","handleReset","className","htmlFor","id","type","placeholder","this","onChange","min","onClick","Component","CountdownBody","msg","remainingTime","play","formatTime","handleStop","speeds","CountdownFooter","map","elem","key","changeSpeed","App","speed","seconds","timer","setInterval","newCount","clearInterval","prevProps","prevState","running","Math","floor","toString","length","format","ReactDOM","render","document","getElementById"],"mappings":"mXA+EeA,G,MA3Ef,YAEI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,QAASF,EAAMG,OAAOC,MACtBC,KAA2B,GAArBL,EAAMG,OAAOC,SAXR,EAgBnBE,YAhBmB,uCAgBL,WAAON,GAAP,SAAAO,EAAA,sDACVP,EAAMQ,iBACN,EAAKV,MAAMW,gBAAgB,EAAKC,MAAML,MACtC,EAAKP,MAAMQ,cACX,EAAKL,SAAS,CAAEU,KAAK,IAJX,2CAhBK,wDAuBnBC,YAAc,SAACZ,GACXA,EAAMQ,iBAEN,EAAKP,SACD,CAAEC,QAAS,EAAGS,KAAK,KAzBvB,EAAKD,MAAQ,CACTL,KAAM,EACNM,KAAK,GAJM,EAFvB,sEAoCQ,OACI,yBAAKE,UAAU,8BACX,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,eACZ,yBAAKA,UAAU,cACX,2BAAOC,QAAQ,QAAQD,UAAU,0BAAjC,eACA,2BACIE,GAAG,QACHC,KAAK,SACLH,UAAU,eACVI,YAAY,QACZb,MAA8B,IAAvBc,KAAKR,MAAMR,QAAgB,GAAKgB,KAAKR,MAAMR,QAClDiB,SAAUD,KAAKnB,aACfqB,IAAI,OAIPF,KAAKR,MAAMC,IAML,2BACCE,UAAU,qBACVG,KAAK,SACLZ,MAAM,QACNiB,QAASH,KAAKN,aAAeM,KAAKpB,MAAMc,cAV7B,2BACfC,UAAU,qBACVG,KAAK,SACLZ,MAAM,QACNiB,QAASH,KAAKZ,qBAzD9C,GAAqCgB,c,MC4CtBC,MA5Cf,SAAuBzB,GAAQ,IAGvB0B,EADInB,EAA8BP,EAA9BO,KAAMoB,EAAwB3B,EAAxB2B,cAAeC,EAAS5B,EAAT4B,KAU7B,OARID,EAAgBpB,EAAO,IACvBmB,EAAM,4BAEY,IAAlBC,IACAD,EAAM,mBAKN,yBAAKX,UAAU,4BACX,wBACIA,UACKY,EAAgB,GAAM,4CACjBA,EAAgB,GAAK,sCACjB,2BACXD,GAEP,yBAAKX,UAAU,kBACX,wBAAIA,UAAU,mBACTf,EAAM6B,YAEX,yBAAKd,UAAU,kBAEPa,EACK,yBAAKb,UAAU,eAAeQ,QAASvB,EAAM8B,YAC1C,uBAAGf,UAAU,iBAGhB,yBAAKA,UAAU,gBAAgBQ,QAASvB,EAAMQ,aAC3C,uBAAGO,UAAU,oBCjCvCgB,G,MAAS,CAAC,EAAG,IAAK,IAkBTC,MAhBf,SAAyBhC,GACrB,OACI,yBAAKe,UAAU,8BACX,yBAAKA,UAAU,2BAEPgB,EAAOE,KAAI,SAAAC,GAAI,OACX,yBAAKC,IAAKD,EAAMnB,UAAU,uBAAuBQ,QAAS,kBAAIvB,EAAMoC,YAAYF,KAC3EA,EADL,WCsGTG,EA1Gf,YAEE,WAAYrC,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRoC,YAAc,SAACE,GACb,EAAKnC,SAAS,CACZmC,WAxBe,EA4BnB3B,gBAAkB,SAAC4B,GACjB,GAAI,EAAK3B,MAAMgB,KACb,OAAO,EAET,EAAKzB,SAAS,CACZI,KAAMgC,EACNZ,cAAeY,KAlCA,EAsCnB/B,YAAc,WACZ,EAAKgC,MAAQC,aAAY,WACvB,IAAIC,EAAW,EAAK9B,MAAMe,cAAgB,EAAE,EAAKf,MAAM0B,MACvD,EAAKnC,SACH,CACEwB,cAAee,GAAY,EAAIA,EAAW,EAC1Cd,MAAM,MAGT,OA/Cc,EAkDnBE,WAAa,WACP,EAAKU,QACPG,cAAc,EAAKH,OACnB,EAAKrC,SACH,CAAEyB,MAAM,MAtDK,EA2DnBd,YAAc,WACZ,EAAKX,SACH,CACEwB,cAAe,EACfC,MAAM,KA7DV,EAAKhB,MAAQ,CACXL,KAAM,EACNoB,cAAe,EACfC,MAAM,EACNU,MAAO,GANQ,EAFrB,gFAYqBM,EAAWC,GAC5B,GAAIzB,KAAKR,MAAMkC,UAAYD,EAAUC,QACnC,OAAQ1B,KAAKR,MAAMgB,MACjB,KAAK,EAEH,YADAR,KAAKZ,cAEP,QACE,UAnBV,6BAsESD,GACL,IAAIgC,EAAUhC,EAAO,GACjBH,EAAU2C,KAAKC,MAAMzC,EAAO,IAGhC,OAFAH,EAAwC,IAA9BA,EAAQ6C,WAAWC,OAAe,IAAM9C,EAAUA,GAE3C,KADjBmC,EAAwC,IAA9BA,EAAQU,WAAWC,OAAe,IAAMX,EAAUA,KA1EhE,+BAgFI,OACE,yBAAKxB,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CACEJ,gBAAiBS,KAAKT,gBACtBH,YAAaY,KAAKZ,YAClBM,YAAaM,KAAKN,cAEpB,kBAAC,EAAD,CACEgB,WAAYV,KAAKU,WACjBF,KAAMR,KAAKR,MAAMgB,KACjBrB,KAAMa,KAAKR,MAAML,KACjBoB,cAAeP,KAAKR,MAAMe,cAC1BnB,YAAaY,KAAKZ,YAClBqB,WAAYT,KAAK+B,OAAO/B,KAAKR,MAAMe,iBAErC,kBAAC,EAAD,CACES,YAAahB,KAAKgB,qBAlGhC,GAAyBZ,aCHzB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c0d52aad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport \"./CountdownHeader.css\";\r\n\r\nexport class CountdownHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n            set: false\r\n        };\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            minutes: event.target.value,\r\n            time: event.target.value * 60,\r\n        });\r\n    }\r\n\r\n\r\n    handleStart = async (event) => {\r\n        event.preventDefault();\r\n        this.props.handleCountdown(this.state.time);\r\n        this.props.handleStart();\r\n        this.setState({ set: true })\r\n    }\r\n\r\n    handleReset = (event) => {\r\n        event.preventDefault();\r\n        // this.props.handleReset();\r\n        this.setState(\r\n            { minutes: 0, set: false }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"countdown-header container\">\r\n                <div className=\"countdown-form\">\r\n                    <form className=\"form-inline\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"input\" className=\"font-weight-bold count\">Countdown: </label>\r\n                            <input\r\n                                id=\"input\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"(Min)\"\r\n                                value={this.state.minutes === 0 ? \"\" : this.state.minutes}\r\n                                onChange={this.handleChange}\r\n                                min=\"1\"\r\n                            />\r\n                        </div>\r\n                        {\r\n                            !this.state.set ? (<input\r\n                                className=\"btn btn-form-start\"\r\n                                type=\"submit\"\r\n                                value=\"Start\"\r\n                                onClick={this.handleStart}\r\n                            />)\r\n                                : (<input\r\n                                    className=\"btn btn-form-reset\"\r\n                                    type=\"submit\"\r\n                                    value=\"Reset\"\r\n                                    onClick={this.handleReset && this.props.handleReset}\r\n                                />)\r\n                        }\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountdownHeader;\r\n","import React from 'react';\r\n\r\nimport './CountdownBody.css';\r\n\r\nfunction CountdownBody(props) {\r\n\r\n    const { time, remainingTime, play } = props;\r\n    let msg;\r\n    if (remainingTime < time / 2) {\r\n        msg = \"More than halfway there!\";\r\n    }\r\n    if (remainingTime === 0) {\r\n        msg = \"Timeâ€™s up!\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"countdown-body container\">\r\n            <h5\r\n                className={\r\n                    (remainingTime < 10) ? \"font-weight-bolder my-3 text-danger blink\"\r\n                        : remainingTime < 20 ? \"font-weight-bolder my-3 text-danger\"\r\n                            : \"font-weight-bolder my-3\"\r\n                }>{msg}</h5>\r\n\r\n            <div className=\"countdown-body\">\r\n                <h3 className=\"countdown-total\">\r\n                    {props.formatTime}\r\n                </h3>\r\n                <div className=\"countdown-play\">\r\n                    {\r\n                        play ?\r\n                            (<div className=\"btn btn-stop\" onClick={props.handleStop}>\r\n                                <i className=\"fa fa-pause\"></i>\r\n                            </div>)\r\n                            :\r\n                            (<div className=\"btn btn-start\" onClick={props.handleStart}>\r\n                                <i className=\"fa fa-play\"></i>\r\n                            </div>)\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountdownBody;","import React from 'react';\r\n\r\nimport \"./CountdownFooter.css\";\r\n\r\nconst speeds = [1, 1.5, 2];\r\n\r\nfunction CountdownFooter(props) {\r\n    return (\r\n        <div className=\"countdown-footer container\">\r\n            <div className=\"countdown-speed-buttons\">\r\n                {\r\n                    speeds.map(elem => (\r\n                        <div key={elem} className=\"btn btn-outline-dark\" onClick={()=>props.changeSpeed(elem)}>\r\n                            {elem}x\r\n                            </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountdownFooter;","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport CountdownHeader from './components/CountdownHeader/CountdownHeader';\nimport CountdownBody from './components/CountdownBody/CountdownBody';\nimport CountdownFooter from './components/CountdownFooter/CountdownFooter';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      remainingTime: 0,\n      play: false,\n      speed: 1,\n    };\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.running !== prevState.running) {\n      switch (this.state.play) {\n        case true:\n          this.handleStart();\n          return;\n        default:\n          return;\n      }\n    }\n  }\n\n  changeSpeed = (speed) => {\n    this.setState({\n      speed\n    });\n  }\n\n  handleCountdown = (seconds) => {\n    if (this.state.play) {\n      return 0;\n    }\n    this.setState({\n      time: seconds,\n      remainingTime: seconds,\n    });\n  }\n\n  handleStart = () => {\n    this.timer = setInterval(() => {\n      let newCount = this.state.remainingTime - 1*this.state.speed;\n      this.setState(\n        {\n          remainingTime: newCount >= 0 ? newCount : 0,\n          play: true\n        }\n      );\n    }, 1005);\n  }\n\n  handleStop = () => {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.setState(\n        { play: false }\n      );\n    }\n  }\n\n  handleReset = () => {\n    this.setState(\n      {\n        remainingTime: 0,\n        play: false\n      }\n    );\n  }\n\n  format(time) {\n    let seconds = time % 60;\n    let minutes = Math.floor(time / 60);\n    minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\n    seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\n    return minutes + ':' + seconds;\n  };\n\n\n  render() {\n    return (\n      <div className=\"App container-fluid\">\n        <div className=\"container\">\n          <div className=\"countdown container\">\n            <CountdownHeader\n              handleCountdown={this.handleCountdown}\n              handleStart={this.handleStart}\n              handleReset={this.handleReset}\n            />\n            <CountdownBody\n              handleStop={this.handleStop}\n              play={this.state.play}\n              time={this.state.time}\n              remainingTime={this.state.remainingTime}\n              handleStart={this.handleStart}\n              formatTime={this.format(this.state.remainingTime)}\n            />\n            <CountdownFooter\n              changeSpeed={this.changeSpeed} />\n          </div>\n        </div >\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}